# .gitlab-ci.yml (Consistent Conventional Key Order)

stages:
  - bootstrap
  - validate
  - build
  - deploy-dev

variables:
  NODE_VERSION: "18"

default:
  tags: [cdk]

bootstrap_dev:
  stage: bootstrap
  image: node:${NODE_VERSION}
  tags: [cdk]
  cache: # Setup keys first
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
    policy: pull
  # No needs
  # No dependencies
  script: | # Script block
    echo "Installing dependencies for bootstrap job..."
    npm ci
    echo "Bootstrapping Dev environment (Region: ${AWS_DEFAULT_REGION:-check_runner_config})..."
    if [ -z "$AWS_ACCOUNT_ID" ] || [ -z "$AWS_DEFAULT_REGION" ]; then
      echo "Error: AWS_ACCOUNT_ID or AWS_DEFAULT_REGION is not set."
      exit 1
    fi
    npx cdk bootstrap "aws://${AWS_ACCOUNT_ID}/${AWS_DEFAULT_REGION}" \
      --require-approval never \
      -c account=${AWS_ACCOUNT_ID} \
      -c region=${AWS_DEFAULT_REGION}
    echo "Bootstrap complete for Dev environment."
  # No artifacts
  # No environment
  rules: # Control keys last
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

validate_aws_connection:
  stage: validate
  image:
    name: amazon/aws-cli:latest
    entrypoint: [""]
  tags: [cdk]
  # No cache
  # No needs
  # No dependencies
  script: # Script block (kept list format for simple script)
    - echo "Verifying AWS connection..."
    - aws sts get-caller-identity
    - echo "AWS connection verified."
  # No artifacts
  # No environment
  rules: # Control keys last
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

build_cdk:
  stage: build
  image: node:${NODE_VERSION}
  tags: [cdk]
  cache: # Setup keys first
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
  # No needs
  # No dependencies
  script: | # Script block
    echo "Installing dependencies..."
    npm ci
    echo "Building TypeScript code..."
    npm run build
    echo "Synthesizing CloudFormation template..."
    if [ -z "$AWS_ACCOUNT_ID" ] || [ -z "$AWS_DEFAULT_REGION" ]; then
      echo "Error: AWS_ACCOUNT_ID or AWS_DEFAULT_REGION is not set."
      exit 1
    fi
    npx cdk synth --all \
      -c account=${AWS_ACCOUNT_ID} \
      -c region=${AWS_DEFAULT_REGION}
  artifacts: # Post-execution keys
    paths: [cdk.out/]
    expire_in: 1 hour
  # No environment
  rules: # Control keys last
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

deploy_to_dev:
  stage: deploy-dev
  image: node:${NODE_VERSION}
  tags: [cdk]
  cache: # Setup keys first
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
    policy: pull
  needs: # Setup keys first
    - job: build_cdk
    - job: bootstrap_dev
      optional: true
  dependencies: # Setup keys first
    - build_cdk
  script: | # Script block
    echo "Installing dependencies for deploy job..."
    npm ci
    echo "Deploying stacks to Dev environment (Region: ${AWS_DEFAULT_REGION:-check_runner_config})..."
    if [ -z "$AWS_ACCOUNT_ID" ] || [ -z "$AWS_DEFAULT_REGION" ]; then
      echo "Error: AWS_ACCOUNT_ID or AWS_DEFAULT_REGION is not set."
      exit 1
    fi
    npx cdk deploy --all \
      --require-approval never \
      --outputs-file cdk-outputs.json \
      -c account=${AWS_ACCOUNT_ID} \
      -c region=${AWS_DEFAULT_REGION}
    echo "Deployment complete."
  artifacts: # Post-execution keys
    paths:
      - cdk-outputs.json
    expire_in: 1 day
  environment: # Post-execution keys
    name: dev
  rules: # Control keys last
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
